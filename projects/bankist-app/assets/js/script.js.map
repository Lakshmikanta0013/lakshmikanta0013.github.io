{"version":3,"sources":["script.js","dom-selector.js","component.js","main.js"],"names":["modal","document","querySelector","overlay","btnCloseModal","btnsOpenModal","querySelectorAll","btnScrollTo","section1","nav","tabs","tabConstainer","tabsContent","openModal","classList","remove","closeModal","add","forEach","addEventListener","e","key","contains","getBoundingClientRect","scrollIntoView","behavior","preventDefault","target","id","getAttribute","block","clicked","closest","t","toggle","dataset","tab","handelHover","link","siblinks","logo","el","style","opacity","this","bind","header","navHeight","height","stickyNav","entries","entry","isIntersecting","headerObserver","IntersectionObserver","root","threshold","rootMargin","observe","sections","reveleSection","observer","unobserve","sectionObsever","s","targetImgs","loadImg","src","imgObserver","img","carouselSlider","slides","btnleft","btnright","dotContainer","curSlide","maxSlide","length","gotToSlide","slideNo","i","transform","nextSlide","activateDots","preSlide","slide","dot","_","insertAdjacentHTML"],"mappings":"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","file":"script.js","sourcesContent":[null,"const modal = document.querySelector('.modal');\nconst overlay = document.querySelector('.overlay');\nconst btnCloseModal = document.querySelector('.btn--close-modal');\nconst btnsOpenModal = document.querySelectorAll('.btn--show-modal');\n\nconst btnScrollTo = document.querySelector('.btn--scroll-to');\nconst section1 = document.querySelector('#section--1');\nconst nav = document.querySelector('.nav');\nconst tabs = document.querySelectorAll('.operations__tab'),\n  tabConstainer = document.querySelector('.operations__tab-container'),\n  tabsContent = document.querySelectorAll('.operations__content');\n","const openModal = function () {\n  modal.classList.remove('visually-hidden');\n  overlay.classList.remove('visually-hidden');\n};\n\nconst closeModal = function () {\n  modal.classList.add('visually-hidden');\n  overlay.classList.add('visually-hidden');\n};\n","btnsOpenModal.forEach((modal) => modal.addEventListener('click', openModal));\n\nbtnCloseModal.addEventListener('click', closeModal);\noverlay.addEventListener('click', closeModal);\n\ndocument.addEventListener('keydown', function (e) {\n  if (e.key === 'Escape' && !modal.classList.contains('visually-hidden')) {\n    closeModal();\n  }\n});\n\n// +++++++++ Smooth-Scrolling +++++++++++\nbtnScrollTo.addEventListener('click', function () {\n  const slcords = section1.getBoundingClientRect();\n  // console.log(slcords);\n  // console.log(e.target.getBoundingClientRect());\n  // console.log('Current scroll (X/Y)', window.pageXOffset, window.pageYOffset);\n  // console.log(\n  //   'height/width viewport',\n  //   document.documentElement.clientHeight,\n  //   document.documentElement.clientWidth\n  // );\n\n  // window.scrollTo(\n  //   slcords.left + window.pageXOffset,\n  //   slcords.top + window.pageYOffset\n  // );\n  // window.scrollTo({\n  //   left: slcords.left + window.pageXOffset,\n  //   top: slcords.top + window.pageYOffset,\n  //   behavior: 'smooth',\n  // });\n\n  section1.scrollIntoView({ behavior: 'smooth' });\n});\n\n// =========== Back-To-Top ===============\ndocument\n  .querySelector('.back-to-top')\n  .addEventListener('click', () =>\n    document.querySelector('body').scrollIntoView({ behavior: 'smooth' })\n  );\n\n// +++++++++ Page Navigation +++++++++++\n\n// document.querySelectorAll('.nav__link').forEach(function (el) {\n//   el.addEventListener('click', function (e) {\n//     e.preventDefault();\n//     const id = this.getAttribute('href');\n//     document.querySelector(id).scrollIntoView({ behavior: 'smooth' });\n//   });\n// });\n\n// ====== using {event delegation} method ========\ndocument.querySelector('.nav__links').addEventListener('click', (e) => {\n  e.preventDefault();\n  const target = e.target;\n  if (target.classList.contains('nav__link')) {\n    const id = target.getAttribute('href');\n    document\n      .querySelector(id)\n      .scrollIntoView({ behavior: 'auto', block: 'start' });\n  }\n});\n\n// ++++++++++++++++ DOM Traversing ++++++++\n// const h1 = document.querySelector('h1');\n\n// going downward child\n// console.log(h1.querySelectorAll('.highlight'));\n// console.log(h1.childNodes);\n// console.log(h1.children);\n\n// console.log(h1.firstElementChild);\n\n// going upword parent\n\n// console.log(h1.parentNode);\n// console.log(h1.parentElement);\n\n// console.log(h1.closest('.header'));\n// h1.closest('.header').style.background = 'var(--gradient-secondary)';\n\n// going sideways: sblings\n\n// console.log(h1.previousElementSibling);\n// console.log(h1.nextElementSibling);\n\n// console.log(h1.previousSibling);\n// console.log(h1.nextSibling);\n\n// console.log(h1.parentElement.children);\n\n// [...h1.parentElement.children].forEach((el) => {\n//   if (el !== h1) el.style.backgroundColor = 'yellow';\n// });\n\n// ========== Creating tabed content =============\n\ntabConstainer.addEventListener('click', (e) => {\n  const clicked = e.target.closest('.operations__tab');\n\n  // Guard clause\n  // this is use to ignore any value(spacilly 'null') other thand tabs element\n  if (!clicked) return;\n\n  // Active tab\n  tabs.forEach((t) => t.classList.remove('operations__tab--active'));\n  clicked.classList.toggle('operations__tab--active');\n\n  //  Activate content area\n  tabsContent.forEach((e) => {\n    e.classList.remove('operations__content--active');\n  });\n\n  document\n    .querySelector(`.operations__content--${clicked.dataset.tab}`)\n    .classList.add('operations__content--active');\n});\n\n// ========== Menu Fade Animation =============\n/*\nconst handelHover = function (e, opacity) {\n  if (e.target.classList.contains('nav__link')) {\n    const link = e.target;\n    const siblinks = link.closest('.nav').querySelectorAll('.nav__link');\n    const logo = link.closest('.nav').querySelector('img');\n\n    siblinks.forEach((el) => {\n      if (el !== link) el.style.opacity = opacity;\n    });\n    logo.style.opacity = opacity;\n  }\n};\nnav.addEventListener('mouseover', function (e) {\n  handelHover(e, 0.5);\n});\nnav.addEventListener('mouseout', function (e) {\n  handelHover(e, 1);\n});\n*/\n\nconst handelHover = function (e) {\n  if (e.target.classList.contains('nav__link')) {\n    const link = e.target;\n    const siblinks = link.closest('.nav').querySelectorAll('.nav__link');\n    const logo = link.closest('.nav').querySelector('img');\n\n    siblinks.forEach((el) => {\n      if (el !== link) el.style.opacity = this;\n    });\n    logo.style.opacity = this;\n  }\n};\nnav.addEventListener('mouseover', handelHover.bind(0.5));\nnav.addEventListener('mouseout', handelHover.bind(1));\n\n// ========== Sticky Navbar =============\n/*\nconst initialCords = section1.getBoundingClientRect();\nwindow.addEventListener('scroll', function () {\n  console.log(window.screenY);\n  if (window.scrollY >= initialCords.top) nav.classList.add('sticky');\n  else nav.classList.remove('sticky');\n});\n*/\n\n//====== Using Intersection Observer API\n\n/*\nconst obsCallback = function (entries, observer) {\n  entries.forEach((entry) => {\n    // console.log(entry);\n  });\n};\nconst obsOptions = {\n  root: null,\n  threshold: [0, 0.2],\n};\nconst observer = new IntersectionObserver(obsCallback, obsOptions);\n\nobserver.observe(section1);\n*/\n\nconst header = document.querySelector('.header');\nconst navHeight = nav.getBoundingClientRect().height;\n\nconst stickyNav = function (entries) {\n  const [entry] = entries;\n  if (!entry.isIntersecting) nav.classList.add('sticky');\n  else nav.classList.remove('sticky');\n};\n\nconst headerObserver = new IntersectionObserver(stickyNav, {\n  root: null,\n  threshold: 0,\n  rootMargin: `-${navHeight}px`,\n});\nheaderObserver.observe(header);\n\n// ========= Revele elements on scroll ===========\nconst sections = document.querySelectorAll('.section');\n\nconst reveleSection = function (entries, observer) {\n  const [entry] = entries;\n\n  if (!entry.isIntersecting) return;\n\n  entry.target.classList.remove('section--hidden');\n  // close the observation when all are finished\n  observer.unobserve(entry.target);\n};\n\nconst sectionObsever = new IntersectionObserver(reveleSection, {\n  root: null,\n  threshold: 0.2,\n});\nsections.forEach((s) => {\n  sectionObsever.observe(s);\n  s.classList.add('section--hidden');\n});\n\n//============ Lazy loading Images ===============\n\nconst targetImgs = document.querySelectorAll('img[data-src]');\n\nconst loadImg = function (entries, observer) {\n  const [entry] = entries;\n\n  if (!entry.isIntersecting) return;\n  entry.target.src = entry.target.dataset.src;\n\n  entry.target.addEventListener('load', () =>\n    entry.target.classList.remove('lazy-img')\n  );\n\n  observer.unobserve(entry.target);\n};\nconst imgObserver = new IntersectionObserver(loadImg, {\n  root: null,\n  threshold: 0.8,\n  // rootMargin: '200px',\n});\n\ntargetImgs.forEach((img) => imgObserver.observe(img));\n\n//============== Carousel Slider =================\n\nconst carouselSlider = function () {\n  const slides = document.querySelectorAll('.slide');\n  const btnleft = document.querySelector('.slider__btn--left');\n  const btnright = document.querySelector('.slider__btn--right');\n  const dotContainer = document.querySelector('.dots');\n\n  let curSlide = 0;\n  const maxSlide = slides.length;\n\n  // ==== Functions Creation\n  const gotToSlide = function (slideNo) {\n    slides.forEach((s, i) => {\n      s.style.transform = `translateX(${(i - slideNo) * 100}%)`;\n    });\n  };\n  const nextSlide = function () {\n    curSlide === maxSlide - 1 ? (curSlide = 0) : curSlide++;\n    gotToSlide(curSlide);\n    activateDots(curSlide);\n  };\n  const preSlide = function () {\n    curSlide === 0 ? (curSlide = maxSlide - 1) : curSlide--;\n    gotToSlide(curSlide);\n    activateDots(curSlide);\n  };\n  const createDots = function () {\n    slides.forEach((_, i) => {\n      dotContainer.insertAdjacentHTML(\n        'beforeend',\n        `<button class=\"dots__dot\" data-slide=\"${i}\"></button>`\n      );\n    });\n  };\n  const activateDots = function (slide) {\n    document.querySelectorAll('.dots__dot').forEach((dot) => {\n      dot.classList.remove('dots__dot--active');\n    });\n    document\n      .querySelector(`.dots__dot[data-slide=\"${slide}\"]`)\n      .classList.add('dots__dot--active');\n  };\n\n  // initialize\n  const init = function () {\n    createDots();\n    activateDots(0);\n    gotToSlide(0);\n  };\n  init();\n\n  // Event handel\n  btnright.addEventListener('click', nextSlide);\n  btnleft.addEventListener('click', preSlide);\n\n  // keydown event\n  document.addEventListener('keydown', (e) => {\n    if (e.key === 'ArrowLeft') preSlide();\n    e.key === 'ArrowRight' && nextSlide();\n  });\n\n  dotContainer.addEventListener('click', (e) => {\n    const target = e.target;\n    if (target.classList.contains('dots__dot')) {\n      const { slide } = target.dataset;\n      gotToSlide(slide);\n      activateDots(slide);\n    }\n  });\n};\ncarouselSlider();\n\n// =================== DO-NOT-UER-CODE =================\n/*\n//  this event get triggered when html DOM tree and script tag are fully loded before any other animation get loaded\ndocument.addEventListener('DOMContentLoaded', function (e) {\n  console.log('HTML parsed and DOM tree built!', e);\n});\n\nwindow.addEventListener('load', function (e) {\n  console.log('Page full Loaded', e);\n});\n\n// prevent user from {reloading} the window before any apecific task.\nwindow.addEventListener('beforeunload', function (e) {\n  e.preventDefault();\n  console.log(e);\n  e.returnValue = 'Are you sure you want to exit?';\n});\n*/\n"]}